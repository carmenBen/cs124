{"version":3,"sources":["reportWebVitals.js","ChecklistItem.js","ModifyTaskPage.js","AddTaskPage.js","Checklist.js","ConfirmDeletePage.js","AddNewListPage.js","ListSelector.js","App.js","InMemoryApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChecklistItem","props","className","type","onInput","checkFunction","id","name","value","defaultChecked","completed","htmlFor","title","priority","onClick","modifyTask","ModifyTaskPage","React","useState","taskName","setTitle","setPriority","defaultValue","onChange","e","target","cancel","handleChangeField","AddTaskPage","console","log","addNewDataPoint","Checklist","useCollection","collection","doc","currentList","orderBy","sortValue","taskValue","data","undefined","docs","map","incompleteTasksOnly","setIncompleteTasksOnly","taskButtonValue","currentTaskNameId","setCurrentTaskNameId","field","update","changeCurrentPage","getItemsToRender","item","checked","currentPage","filter","task","length","forEach","delete","generateUniqueID","set","created","firebase","database","ServerValue","TIMESTAMP","list","ConfirmDeletePage","listName","deleteCurrentList","listId","AddNewListPage","addNewList","ListSelector","listValues","loading","lists","changeCurrentList","disabled","selected","App","setSortValue","setCurrentList","setCurrentPage","newPage","InMemoryApp","initialData","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbce2ed4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../node_modules/font-awesome/css/font-awesome.min.css';\n\nexport function ChecklistItem(props) {\n    const priorities = {\n        \"1\": \"High\",\n        \"2\": \"Medium\",\n        \"3\": \"Low\"\n    }\n\n    return (\n        <div className={\"checklist\"}>\n            <input key={props.id} type=\"checkbox\" onInput={props.checkFunction}\n                   id={props.id}\n                   name={props.id} value={props.id} defaultChecked={props.completed}/>\n            <label htmlFor={props.id}>{props.title + \" (\" + priorities[props.priority] + \") \"}</label>\n            <button onClick={() => props.modifyTask(props.title, props.id)}>Modify</button>\n        </div>\n    );\n\n    //\n}","import React from \"react\";\n\nexport function ModifyTaskPage(props) {\n    const [title, setTitle] = React.useState(props.taskName);\n    const [priority, setPriority] = React.useState(props.priority);\n\n    function onModifyClick() {\n        if (props.taskName !== title) {\n            props.handleChangeField(props.id, \"title\", title);\n        }\n        if (props.priority !== priority) {\n            props.handleChangeField(props.id, \"priority\", priority);\n        }\n    }\n\n    return (\n        <div>\n            <label id=\"modifyTask\" htmlFor=\"changeTask\">Modify Task:</label>\n            <input type=\"text\" id=\"changeTask\" name=\"changeTask\" defaultValue={props.taskName} onChange={(e) => setTitle(e.target.value)}/>\n            <select name=\"priority\" id=\"priority-dropdown\" aria-label=\"dropdown to select priority\" onChange={(e) => setPriority(e.target.value)}>\n                <option value=\"1\">High</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">Low</option>\n            </select>\n            <input type=\"button\" value=\"Cancel\"\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Modify\"\n                   onClick={() => onModifyClick()}/>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function AddTaskPage(props) {\n    const [title, setTitle] = React.useState(\"\");\n    const [priority, setPriority] = React.useState(\"1\");\n    console.log(\"in new task page\");\n\n    return (\n        <div>\n            <label id=\"addTask\" htmlFor=\"newTask\">Add New Task:</label>\n            <input type=\"text\" id=\"newTask\" name=\"newTask\" onChange={(e) => setTitle(e.target.value)}/>\n            <select name=\"priority\" id=\"priority-dropdown\" aria-label=\"dropdown to select priority\" onChange={(e) => setPriority(e.target.value)}>\n                <option value=\"1\">High</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">Low</option>\n            </select>\n            <input type=\"button\" value=\"Cancel\"\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Add\"\n                   onClick={(e) => props.addNewDataPoint(title, priority)}/>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport {ChecklistItem} from \"./ChecklistItem\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {ModifyTaskPage} from \"./ModifyTaskPage\";\nimport {AddTaskPage} from \"./AddTaskPage\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\n\nexport function Checklist(props) {\n\n    const [taskValue, taskLoading, taskError] = useCollection(props.collection.doc(props.currentList).collection(\"tasks\").orderBy(props.sortValue, \"asc\"));\n    let data = [];\n    if (taskValue !== undefined) {\n        data = taskValue.docs.map(doc =>\n            doc.data());\n    }\n\n    const [incompleteTasksOnly, setIncompleteTasksOnly] = useState(false);\n    const taskButtonValue = (!incompleteTasksOnly ? \"Hide Completed Tasks\" : \"Show Completed Tasks\");\n    const [currentTaskNameId, setCurrentTaskNameId] = useState([]);\n\n    function addNewItem(value, priority) {\n        const id = generateUniqueID();\n        props.collection.doc(props.currentList).collection(\"tasks\").doc(id).set(\n            {\n                title: value,\n                id: id,\n                completed: false,\n                priority: priority,\n                created: firebase.database.ServerValue.TIMESTAMP,\n                list: props.currentList\n            }\n        );\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function handleChangeField(id, field, value) {\n        props.collection.doc(props.currentList).collection(\"tasks\").doc(id).update({\n            [field]: value,\n        });\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function handleDelete(id) {\n        props.collection.doc(props.currentList).collection(\"tasks\").doc(id).delete();\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function deleteCompletedItems() {\n        data.forEach(item => item.completed && handleDelete(item.id));\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function changeItemsToShow() {\n        setIncompleteTasksOnly(!incompleteTasksOnly);\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function modifyTask(taskName, id) {\n        props.changeCurrentPage(\"modifyTask\");\n        setCurrentTaskNameId([taskName, id]);\n    }\n\n    function onCheck(checked, id) {\n        handleChangeField(id, \"completed\", checked);\n    }\n\n    function getItemsToRender(completed) {\n        return data.map((item) => ((completed && item.completed) || (!completed && !item.completed) ?\n            <ChecklistItem key={item.id} id={item.id} title={item.title} completed={item.completed}\n                           checkFunction={(e) => onCheck(e.target.checked, item.id)} modifyTask={modifyTask}\n                           priority={item.priority}/>\n            : undefined));\n    }\n\n    return (\n        <div>\n            {props.currentPage === \"checklist\" && <div>\n                <form>\n                    <table>\n                        <thead>\n                        <tr>\n                            {!incompleteTasksOnly && <th>Complete</th>}\n                            <th>Incomplete</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            {!incompleteTasksOnly && <td>{getItemsToRender(true)}</td>}\n                            <td>{getItemsToRender(false)}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </form>\n\n                <div className=\"buttons\">\n                    <input type=\"button\" value=\"Add New Task\" onClick={() => props.changeCurrentPage(\"addTask\")}/>\n                    <input type=\"button\" value={taskButtonValue}\n                           onClick={changeItemsToShow}/>\n                    {(data.filter((task) => task.completed)).length > 0 &&\n                    <input type=\"button\" value={\"Delete Completed Tasks\"}\n                           onClick={deleteCompletedItems}/>\n                    }\n                </div>\n            </div>}\n            <div>\n                {\n                    props.currentPage === \"modifyTask\" && <ModifyTaskPage handleChangeField={handleChangeField}\n                                                                          taskName={currentTaskNameId[0]}\n                                                                          id={currentTaskNameId[1]}\n                                                                          cancel={() => props.changeCurrentPage(\"checklist\")}/>\n                }\n                {\n                    props.currentPage === \"addTask\" &&\n                    <AddTaskPage addNewDataPoint={addNewItem} cancel={() => props.changeCurrentPage(\"checklist\")}/>\n                }\n            </div>\n        </div>\n    )\n\n}","import React from \"react\";\n\nexport function ConfirmDeletePage(props) {\n\n    return (\n        <div>\n            <h1 id=\"deleteList\">Are you sure you want to delete {props.listName}?</h1>\n            <input type=\"button\" value=\"Cancel\" aria-label={\"Cancel delete \" + props.listName}\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Confirm\" aria-label={\"Delete \" + props.listName}\n                   onClick={() => props.deleteCurrentList(props.listId)}/>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport function AddNewListPage(props) {\n    const [title, setTitle] = React.useState(\"\");\n\n    return (\n        <div>\n            <h1>Add New List:</h1>\n            <input type=\"text\" id=\"newList\" name=\"newList\"\n                   onChange={(e) => setTitle(e.target.value)}/>\n            <input type=\"button\" value=\"Cancel\"\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Add\"\n                   onClick={(e) => props.addNewList(title)}/>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {ConfirmDeletePage} from \"./ConfirmDeletePage\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {AddNewListPage} from \"./AddNewListPage\";\n\nexport function ListSelector(props) {\n    const [listValues, loading, error] = useCollection(props.collection);\n    let lists = [];\n    if (listValues !== undefined) {\n        lists = listValues.docs.map(doc =>\n            doc.data());\n    }\n\n    function addNewList(title) {\n        const id = generateUniqueID();\n        props.collection.doc(id).set(\n            {\n                title: title,\n                id: id,\n            }\n        ).then(() => {\n                // list doesn't exist yet, so wait for it to be created to change current list\n                props.changeCurrentList(id);\n                props.changeCurrentPage(\"checklist\");\n            }\n        );\n\n    }\n\n    function deleteCurrentList(id) {\n        props.changeCurrentList(null);\n        props.collection.doc(id).delete();\n        console.log(\"id: \", id);\n        props.changeCurrentPage(\"checklist\");\n    }\n\n\n    return (\n        <div>\n            {!loading && props.currentPage !== \"newList\" && props.currentList !== null && lists.filter(list => list.id === props.currentList)[0].title}\n            {props.currentPage === \"checklist\" && <div id=\"sort-by\">Select a list:\n                <select name=\"listSelector\" aria-label=\"dropdown to select list\" id=\"listSelectorDropdown\"\n                        onChange={(e) => props.changeCurrentList(e.target.value)}>\n                    {props.currentList === null && <option disabled selected value>Add your first list...</option>}\n                    {lists.map(item => <option value={item.id}\n                                               selected={item.id === props.currentList}>{item.title}</option>)}\n                </select>\n                <button id=\"addButton\" aria-label=\"Add new list\" onClick={() => props.changeCurrentPage(\"newList\")}>\n                    +\n                </button>\n                {props.currentList !== null &&\n                <button id=\"deleteButton\" value=\"Delete Current List\" aria-label=\"Delete list\"\n                        onClick={() => props.changeCurrentPage(\"deleteList\")}>\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"/>\n                </button>}\n            </div>}\n            {props.currentPage === \"deleteList\" &&\n            <ConfirmDeletePage listName={lists.filter(list => list.id === props.currentList)[0].title}\n                               listId={props.currentList}\n                               deleteCurrentList={deleteCurrentList}\n                               cancel={() => props.changeCurrentPage(\"checklist\")}/>}\n            {props.currentPage === \"newList\" &&\n            <AddNewListPage addNewList={addNewList} cancel={() => props.changeCurrentPage(\"checklist\")}/>}\n        </div>\n    );\n}","import './App.css';\nimport {Checklist} from './Checklist.js'\nimport React, {useState} from \"react\";\nimport {ListSelector} from \"./ListSelector\";\n\nexport function App(props) {\n\n    const [sortValue, setSortValue] = useState(\"title\");\n    const [currentList, setCurrentList] = useState(null);\n    const [currentPage, setCurrentPage] = useState(\"checklist\");\n\n    function changeCurrentPage(newPage) {\n        setCurrentPage(newPage);\n    }\n\n    function changeCurrentList(id) {\n        setCurrentList(id);\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>\n                <ListSelector currentList={currentList} changeCurrentList={changeCurrentList}\n                              collection={props.collection} changeCurrentPage={changeCurrentPage}\n                              currentPage={currentPage}\n                />\n                {currentPage === \"checklist\" && currentList !== null &&\n                <div className=\"selectDropdowns\">\n                    <div id=\"sort-by\">Sort by:\n                        <select name=\"sortBy\" id=\"sortByDropdown\" aria-label=\"dropdown to select value to sort by\"\n                                onChange={(e) => setSortValue(e.target.value)}\n                                defaultValue={sortValue}>\n                            <option value=\"title\" selected={sortValue === \"title\"}>Title</option>\n                            <option value=\"priority\" selected={sortValue === \"priority\"}>Priority</option>\n                            <option value=\"created\" selected={sortValue === \"created\"}>Date created</option>\n                        </select></div>\n                </div>\n                }\n            </h1>\n\n            {currentList !== null &&\n            <div>\n                <Checklist currentList={currentList}\n                           sortValue={sortValue}\n                           changeCurrentPage={changeCurrentPage}\n                           collection={props.collection}\n                           currentPage={currentPage}\n                />\n\n        </div>}\n                </div>\n    );\n}\n\nexport default App;\n","import App from \"./App\";\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nexport function InMemoryApp(props) {\n    return <App initialData={props.initialData} collection={props.collection} />\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {InMemoryApp} from \"./InMemoryApp\";\nimport firebase from \"firebase/compat\";\n\nconst initialData = []\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst collectionName = \"carmenBen-hmc-tasks\";\nconst collection = db.collection(collectionName);\n\nReactDOM.render(\n  <React.StrictMode>\n      <InMemoryApp initialData={initialData} collection={collection}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}