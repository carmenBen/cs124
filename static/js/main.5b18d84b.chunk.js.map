{"version":3,"sources":["reportWebVitals.js","ChecklistItem.js","Checklist.js","AddTaskPage.js","IncompleteTasksOnly.js","ModifyTaskPage.js","App.js","InMemoryApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChecklistItem","props","className","type","onInput","checkFunction","id","name","value","defaultChecked","completed","htmlFor","title","onClick","modifyTask","Checklist","onCheck","e","target","checked","changeCompletedItems","completedItems","filter","item","handleChangeField","completedItemsToRender","items","map","undefined","incompleteItemsToRender","AddTaskPage","addNewDataPoint","document","getElementById","IncompleteTasksOnly","indexOf","ModifyTaskPage","defaultValue","taskName","App","useCollection","collection","data","docs","doc","useState","itemsToShow","setItemsToShow","initialCompletedItems","setCompletedItems","componentsToRender","setComponentsToRender","taskButtonValue","showButtons","setShowButtons","addNewItem","newDataMember","generateUniqueID","set","field","update","useEffect","console","log","length","forEach","delete","InMemoryApp","initialData","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5b18d84b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../node_modules/font-awesome/css/font-awesome.min.css';\n\nexport function ChecklistItem(props) {\n\n    return (\n        <div className={\"checklist\"}>\n            <input key={props.id} type=\"checkbox\" onInput={props.checkFunction} id={props.id}\n                   name={props.id} value={props.id} defaultChecked={props.completed}/>\n            <label htmlFor={props.id}>{props.title}</label>\n            <button onClick={() => props.modifyTask(props.title, props.id)}>Modify</button>\n        </div>\n    );\n\n    //\n}","import React from \"react\";\nimport {ChecklistItem} from \"./ChecklistItem\";\n\nexport function Checklist(props) {\n\n    function onCheck(e, id) {\n        e.target.checked ? props.changeCompletedItems([...props.completedItems, id]) :\n            props.changeCompletedItems(props.completedItems.filter((item) => item !== id));\n        props.handleChangeField(id, \"completed\", e.target.checked);\n    }\n\n    const completedItemsToRender = props.items.map((item) => (item.completed ?\n        <ChecklistItem key={item.id} id={item.id} title={item.title} completed={true}\n                       checkFunction={(e) => onCheck(e, item.id)} modifyTask={props.modifyTask}/> : undefined));\n    const incompleteItemsToRender = props.items.map((item) => (!(item.completed) ?\n        <ChecklistItem key={item.id} id={item.id} title={item.title} completed={false}\n                       checkFunction={(e) => onCheck(e, item.id)} modifyTask={props.modifyTask}/> : undefined));\n\n    return (\n        <form>\n            <table>\n                <tr>\n                    <th>Complete</th>\n                    <th>Incomplete</th>\n                </tr>\n                <tr>\n                    <td>{completedItemsToRender}</td>\n                    <td>{incompleteItemsToRender}</td>\n                </tr>\n            </table>\n        </form>\n    );\n}","import React from \"react\";\n\nexport function AddTaskPage(props) {\n\n    return (\n        <div>\n            <label id=\"addTask\" htmlFor=\"newTask\">Add New Task:</label>\n            <input type=\"text\" id=\"newTask\" name=\"newTask\"/>\n            <input type=\"button\" value=\"Add\"\n                   onClick={() => props.addNewDataPoint(document.getElementById(\"newTask\").value)}/>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {ChecklistItem} from \"./ChecklistItem\";\n\nexport function IncompleteTasksOnly(props) {\n    function onCheck(e, id) {\n        e.target.checked ? props.changeCompletedItems([...props.completedItems, id]) :\n            props.changeCompletedItems(props.completedItems.filter((item) => item !== id));\n        props.handleChangeField(id, \"completed\", e.target.checked);\n    }\n\n    const incompleteItemsToRender = props.items.map((item) => (props.completedItems.indexOf(item.id) <= -1) ?\n        <ChecklistItem id={item.id} title={item.title} completed={false}\n                       checkFunction={(e) => onCheck(e, item.id)}/> : undefined);\n\n    return (\n        <form>\n            <table>\n                <tr>\n                    <th>Incomplete</th>\n                </tr>\n                <tr>\n                    <td>{incompleteItemsToRender}</td>\n                </tr>\n            </table>\n        </form>\n    );\n}","export function ModifyTaskPage(props) {\n    return (\n        <div>\n            <label id=\"modifyTask\" htmlFor=\"changeTask\">Modify Task:</label>\n            <input type=\"text\" id=\"changeTask\" name=\"changeTask\" defaultValue={props.taskName}/>\n            <input type=\"button\" value=\"Modify\"\n                   onClick={() => props.handleChangeField(props.id, \"title\", document.getElementById(\"changeTask\").value)}/>\n        </div>\n    );\n}","import './App.css';\nimport {Checklist} from './Checklist.js'\nimport {AddTaskPage} from \"./AddTaskPage\";\nimport {useEffect, useState} from \"react\";\nimport {IncompleteTasksOnly} from \"./IncompleteTasksOnly\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {ModifyTaskPage} from \"./ModifyTaskPage\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\nexport function App(props) {\n    const [value, loading, error] = useCollection(props.collection);\n    let data = [];\n    if (value !== undefined) {\n        data = value.docs.map(doc =>\n            doc.data());\n    }\n    const [itemsToShow, setItemsToShow] = useState(\"both\");\n    const initialCompletedItems = data.map((item) => item.completed ? item.id : undefined);\n    const [completedItems, setCompletedItems] = useState(initialCompletedItems);\n    const [componentsToRender, setComponentsToRender] = useState(<Checklist items={data}\n                                                                            handleChangeField={handleChangeField}\n                                                                            modifyTask={modifyTask}\n                                                                            completedItems={completedItems}\n                                                                            changeCompletedItems={setCompletedItems}/>);\n\n    const taskButtonValue = (itemsToShow === \"both\" ? \"Hide Completed Tasks\" : \"Show Completed Tasks\");\n    const [showButtons, setShowButtons] = useState(true);\n\n    useEffect(() => {\n        setComponentsToRender(<Checklist items={data} handleChangeField={handleChangeField} modifyTask={modifyTask}\n                                         completedItems={completedItems} changeCompletedItems={setCompletedItems}/>);\n        setShowButtons(true);\n    }, [value]);\n\n    useEffect(() => {\n        setComponentsToRender(<Checklist items={data} handleChangeField={handleChangeField} modifyTask={modifyTask}\n                                         completedItems={completedItems} changeCompletedItems={setCompletedItems}/>);\n        setShowButtons(true);\n    }, [completedItems]);\n\n    function addNewItem(value) {\n        let newDataMember = {\n            title: value,\n            id: generateUniqueID(),\n            completed: false,\n        }\n        props.collection.doc(newDataMember.id).set(newDataMember);\n    }\n\n    function handleChangeField(id, field, value) {\n        props.collection.doc(id).update({\n            [field]: value,\n        });\n    }\n\n    function handleDelete(id) {\n        props.collection.doc(id).delete();\n    }\n\n    function deleteCompletedItems() {\n        data.forEach(item => item.completed && handleDelete(item.id));\n        setCompletedItems([]);\n    }\n\n    function renderAddTaskPage() {\n        console.log(\"trying to render add task page\");\n        setComponentsToRender(<AddTaskPage addNewDataPoint={addNewItem}/>);\n        setShowButtons(!showButtons);\n    }\n\n    function changeItemsToShow() {\n        setItemsToShow((itemsToShow === \"incomplete\" ? \"both\" : \"incomplete\"));\n        if (itemsToShow === \"both\") {\n            setComponentsToRender(<IncompleteTasksOnly completedItems={completedItems}\n                                                       changeCompletedItems={setCompletedItems}\n                                                       handleChangeField={handleChangeField} items={data}/>);\n        } else {\n            setComponentsToRender(<Checklist items={data} handleChangeField={handleChangeField} modifyTask={modifyTask}\n                                             completedItems={completedItems}\n                                             changeCompletedItems={setCompletedItems}/>);\n        }\n    }\n\n    function modifyTask(taskName, id) {\n        setComponentsToRender(<ModifyTaskPage handleChangeField={handleChangeField} taskName={taskName} id={id}/>)\n        setShowButtons(false);\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>To Do List</h1>\n            {componentsToRender}\n            {showButtons && <div>\n                <input type=\"button\" value=\"Add New Task\" onClick={renderAddTaskPage}/>\n                {completedItems.length > 0 &&\n                <input type=\"button\" value={\"Delete Completed Items\"}\n                       onClick={deleteCompletedItems}/>\n                }\n                <input type=\"button\" value={taskButtonValue}\n                       onClick={changeItemsToShow}/>\n            </div>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"./App\";\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nexport function InMemoryApp(props) {\n    return <App initialData={props.initialData} collection={props.collection} />\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {InMemoryApp} from \"./InMemoryApp\";\nimport firebase from \"firebase/compat\";\n\nconst initialData = []\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\n    authDomain: \"cs124-fall2021.firebaseapp.com\",\n    projectId: \"cs124-fall2021\",\n    storageBucket: \"cs124-fall2021.appspot.com\",\n    messagingSenderId: \"264318304667\",\n    appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst collectionName = \"carmenBen-hmc-tasks\";\nconst collection = db.collection(collectionName);\n\nReactDOM.render(\n  <React.StrictMode>\n      <InMemoryApp initialData={initialData} collection={collection}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}