{"version":3,"sources":["reportWebVitals.js","ChecklistItem.js","Checklist.js","AddTaskPage.js","ModifyTaskPage.js","App.js","InMemoryApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChecklistItem","props","className","type","onInput","checkFunction","id","name","value","defaultChecked","completed","htmlFor","title","priority","onClick","modifyTask","Checklist","getItemsToRender","items","map","item","e","checked","target","handleChangeField","undefined","incompleteTasksOnly","AddTaskPage","React","useState","setTitle","setPriority","onChange","cancel","addNewDataPoint","ModifyTaskPage","taskName","defaultValue","App","sortValue","setSortValue","useCollection","collection","orderBy","data","docs","doc","setIncompleteTasksOnly","currentPage","setCurrentPage","currentTaskNameId","setCurrentTaskNameId","taskButtonValue","returnToHomePage","field","update","completedItems","filter","task","length","forEach","delete","generateUniqueID","set","created","firebase","database","ServerValue","TIMESTAMP","InMemoryApp","initialData","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b22c72e8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../node_modules/font-awesome/css/font-awesome.min.css';\n\nexport function ChecklistItem(props) {\n    const priorities = {\n        \"1\": \"High\",\n        \"2\": \"Medium\",\n        \"3\": \"Low\"\n    }\n\n    return (\n        <div className={\"checklist\"}>\n            <input key={props.id} type=\"checkbox\" onInput={props.checkFunction} id={props.id}\n                   name={props.id} value={props.id} defaultChecked={props.completed}/>\n            {/*<div id={\"checklist-item-margin\"}>*/}\n                <label htmlFor={props.id}>{props.title + \" (\" + priorities[props.priority] + \") \"}</label>\n                <button onClick={() => props.modifyTask(props.title, props.id)}>Modify</button>\n            {/*</div>*/}\n        </div>\n    );\n\n    //\n}","import React from \"react\";\nimport {ChecklistItem} from \"./ChecklistItem\";\n\nexport function Checklist(props) {\n\n    function onCheck(checked, id) {\n        props.handleChangeField(id, \"completed\", checked);\n    }\n\n    function getItemsToRender(completed) {\n        return props.items.map((item) => ((completed && item.completed) || (!completed && !item.completed) ?\n            <ChecklistItem key={item.id} id={item.id} title={item.title} completed={item.completed}\n                           checkFunction={(e) => onCheck(e.target.checked, item.id)} modifyTask={props.modifyTask}\n                           priority={item.priority}/>\n            : undefined));\n    }\n\n    return (\n        <form>\n            <table>\n                <thead>\n                    <tr>\n                        {!props.incompleteTasksOnly && <th>Complete</th>}\n                        <th>Incomplete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        {!props.incompleteTasksOnly && <td>{getItemsToRender(true)}</td>}\n                        <td>{getItemsToRender(false)}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </form>\n    );\n}","import React from \"react\";\n\nexport function AddTaskPage(props) {\n    const [title, setTitle] = React.useState(\"\");\n    const [priority, setPriority] = React.useState(\"1\");\n\n    return (\n        <div>\n            <label id=\"addTask\" htmlFor=\"newTask\">Add New Task:</label>\n            <input type=\"text\" id=\"newTask\" name=\"newTask\" onChange={(e) => setTitle(e.target.value)}/>\n            <select name=\"priority\" id=\"priority-dropdown\" onChange={(e) => setPriority(e.target.value)}>\n                <option value=\"1\">High</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">Low</option>\n            </select>\n            <input type=\"button\" value=\"Cancel\"\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Add\"\n                   onClick={(e) => props.addNewDataPoint(title, priority)}/>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport function ModifyTaskPage(props) {\n    const [title, setTitle] = React.useState(props.taskName);\n    const [priority, setPriority] = React.useState(props.priority);\n\n    function onModifyClick() {\n        if (props.taskName !== title) {\n            props.handleChangeField(props.id, \"title\", title);\n        }\n        if (props.priority !== priority) {\n            props.handleChangeField(props.id, \"priority\", priority);\n        }\n    }\n\n    return (\n        <div>\n            <label id=\"modifyTask\" htmlFor=\"changeTask\">Modify Task:</label>\n            <input type=\"text\" id=\"changeTask\" name=\"changeTask\" defaultValue={props.taskName} onChange={(e) => setTitle(e.target.value)}/>\n            <select name=\"priority\" id=\"priority-dropdown\" onChange={(e) => setPriority(e.target.value)}>\n                <option value=\"1\">High</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">Low</option>\n            </select>\n            <input type=\"button\" value=\"Cancel\"\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Modify\"\n                   onClick={() => onModifyClick()}/>\n        </div>\n    );\n}","import './App.css';\nimport {Checklist} from './Checklist.js'\nimport {AddTaskPage} from \"./AddTaskPage\";\nimport React, {useEffect, useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {ModifyTaskPage} from \"./ModifyTaskPage\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase/compat\";\n\nexport function App(props) {\n    const [sortValue, setSortValue] = useState(\"title\");\n    const [value, loading, error] = useCollection(props.collection.orderBy(sortValue, \"asc\"));\n    let data = [];\n    if (value !== undefined) {\n        data = value.docs.map(doc =>\n            doc.data());\n    }\n    const [incompleteTasksOnly, setIncompleteTasksOnly] = useState(false);\n    const [currentPage, setCurrentPage] = useState(\"checklist\");\n    const [currentTaskNameId, setCurrentTaskNameId] = useState([]);\n    const taskButtonValue = (!incompleteTasksOnly ? \"Hide Completed Tasks\" : \"Show Completed Tasks\");\n\n    function addNewItem(value, priority) {\n        const id = generateUniqueID();\n        props.collection.doc(id).set(\n            {\n                title: value,\n                id: id,\n                completed: false,\n                priority: priority,\n                created: firebase.database.ServerValue.TIMESTAMP\n            }\n        );\n        setCurrentPage(\"checklist\");\n    }\n\n    function returnToHomePage() {\n        setCurrentPage(\"checklist\");\n    }\n\n    function handleChangeField(id, field, value) {\n        props.collection.doc(id).update({\n            [field]: value,\n        });\n        setCurrentPage(\"checklist\");\n    }\n\n    function handleDelete(id) {\n        props.collection.doc(id).delete();\n        setCurrentPage(\"checklist\");\n    }\n\n    function deleteCompletedItems() {\n        data.forEach(item => item.completed && handleDelete(item.id));\n        setCurrentPage(\"checklist\");\n    }\n\n    function renderAddTaskPage() {\n        setCurrentPage(\"addTask\");\n    }\n\n    function changeItemsToShow() {\n        setIncompleteTasksOnly(!incompleteTasksOnly);\n        setCurrentPage(\"checklist\");\n    }\n\n    function modifyTask(taskName, id) {\n        setCurrentPage(\"modifyTask\");\n        setCurrentTaskNameId([taskName, id]);\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>\n                To Do List <br/>\n                {currentPage === \"checklist\" &&\n                <div id=\"sort-by\">Sort by:\n                    <select name=\"sortBy\" id=\"sortByDropdown\"\n                            onChange={(e) => setSortValue(e.target.value)}>\n                        <option value=\"title\">Title</option>\n                        <option value=\"priority\">Priority</option>\n                        <option value=\"created\">Date created</option>\n                    </select></div>\n                }\n            </h1>\n\n            {currentPage === \"checklist\" &&\n            <div>\n                <Checklist items={data}\n                           handleChangeField={handleChangeField}\n                           modifyTask={modifyTask}\n                           completedItems={data.filter((task) => task.completed)}\n                           incompleteTasksOnly={incompleteTasksOnly}\n                />\n                <div>\n                    <input type=\"button\" value=\"Add New Task\" onClick={renderAddTaskPage}/>\n                    {(data.filter((task) => task.completed)).length > 0 &&\n                    <input type=\"button\" value={\"Delete Completed Items\"}\n                           onClick={deleteCompletedItems}/>\n                    }\n                    <input type=\"button\" value={taskButtonValue}\n                           onClick={changeItemsToShow}/>\n                </div>\n            </div>}\n            {currentPage === \"modifyTask\" && <ModifyTaskPage handleChangeField={handleChangeField}\n                                                             taskName={currentTaskNameId[0]} id={currentTaskNameId[1]}\n                                                             cancel={returnToHomePage}/>}\n            {currentPage === \"addTask\" && <AddTaskPage addNewDataPoint={addNewItem} cancel={returnToHomePage}/>}\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"./App\";\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nexport function InMemoryApp(props) {\n    return <App initialData={props.initialData} collection={props.collection} />\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {InMemoryApp} from \"./InMemoryApp\";\nimport firebase from \"firebase/compat\";\n\nconst initialData = []\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcQ6XCOvMIA7pHME4bWBgy_7OVy_7XErA\",\n    authDomain: \"cs124-fall2021.firebaseapp.com\",\n    projectId: \"cs124-fall2021\",\n    storageBucket: \"cs124-fall2021.appspot.com\",\n    messagingSenderId: \"264318304667\",\n    appId: \"1:264318304667:web:4be8d27a02811b1ccd613e\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst collectionName = \"carmenBen-hmc-tasks\";\nconst collection = db.collection(collectionName);\n\nReactDOM.render(\n  <React.StrictMode>\n      <InMemoryApp initialData={initialData} collection={collection}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}