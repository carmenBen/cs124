{"version":3,"sources":["reportWebVitals.js","ChecklistItem.js","ModifyTaskPage.js","AddTaskPage.js","Checklist.js","ConfirmDeletePage.js","AddNewListPage.js","SettingsPage.js","ConfirmLeaveListPage.js","ListSelector.js","App.js","InMemoryApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChecklistItem","props","className","type","onInput","checkFunction","id","name","value","defaultChecked","completed","htmlFor","title","priority","onClick","modifyTask","ModifyTaskPage","React","useState","taskName","setTitle","setPriority","defaultValue","onChange","e","target","cancel","handleChangeField","AddTaskPage","console","log","addNewDataPoint","Checklist","useCollection","collection","doc","currentList","orderBy","sortValue","taskValue","data","undefined","docs","map","incompleteTasksOnly","setIncompleteTasksOnly","taskButtonValue","currentTaskNameId","setCurrentTaskNameId","field","update","changeCurrentPage","getItemsToRender","item","checked","currentPage","filter","task","length","forEach","delete","generateUniqueID","set","created","firebase","database","ServerValue","TIMESTAMP","list","ConfirmDeletePage","listName","deleteCurrentList","listId","AddNewListPage","addNewList","SettingsPage","email","setEmail","shareList","sharedWith","person","removePerson","ConfirmLeaveListPage","leaveCurrentList","user","ListSelector","where","listSharedValues","loadingShared","uid","listOwnedValues","loadingOwned","listsOwned","listsShared","removePersonFromList","newPage","sharing","getListField","changeCurrentList","concat","emailVerified","disabled","selected","owner","SignUp","useCreateUserWithEmailAndPassword","auth","createUserWithEmailAndPassword","loading","error","password","setPassword","message","SignIn","googleProvider","GoogleAuthProvider","useSignInWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","SignedInApp","setSortValue","setCurrentList","setCurrentPage","verifyingEmail","setVerifyingEmail","signOut","sendEmailVerification","App","useAuthState","signUp","setSignUp","initialData","InMemoryApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.945418c0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../node_modules/font-awesome/css/font-awesome.min.css';\n\nexport function ChecklistItem(props) {\n    const priorities = {\n        \"1\": \"High\",\n        \"2\": \"Medium\",\n        \"3\": \"Low\"\n    }\n\n    return (\n        <div className={\"checklist\"}>\n            <input key={props.id} type=\"checkbox\" onInput={props.checkFunction}\n                   id={props.id}\n                   name={props.id} value={props.id} defaultChecked={props.completed}/>\n            <label htmlFor={props.id}>{props.title + \" (\" + priorities[props.priority] + \") \"}</label>\n            <button onClick={() => props.modifyTask(props.title, props.id)}>Modify</button>\n        </div>\n    );\n\n    //\n}","import React from \"react\";\n\nexport function ModifyTaskPage(props) {\n    const [title, setTitle] = React.useState(props.taskName);\n    const [priority, setPriority] = React.useState(props.priority);\n\n    function onModifyClick() {\n        if (props.taskName !== title) {\n            props.handleChangeField(props.id, \"title\", title);\n        }\n        if (props.priority !== priority) {\n            props.handleChangeField(props.id, \"priority\", priority);\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"miscTextLarger\">Modify Task:</div>\n            <input type=\"text\" id=\"changeTask\" name=\"changeTask\" defaultValue={props.taskName} onChange={(e) => setTitle(e.target.value)}/>\n            <select name=\"priority\" id=\"priority-dropdown\" aria-label=\"dropdown to select priority\" onChange={(e) => setPriority(e.target.value)}>\n                <option value=\"1\">High</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">Low</option>\n            </select>\n            <input type=\"button\" value=\"Cancel\"\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Modify\"\n                   onClick={() => onModifyClick()}/>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function AddTaskPage(props) {\n    const [title, setTitle] = React.useState(\"\");\n    const [priority, setPriority] = React.useState(\"1\");\n    console.log(\"in new task page\");\n\n    return (\n        <div>\n            <div className=\"miscTextLarger\">Add New Task:</div>\n            <input type=\"text\" id=\"newTask\" name=\"newTask\" onChange={(e) => setTitle(e.target.value)}/>\n            <select name=\"priority\" id=\"priority-dropdown\" aria-label=\"dropdown to select priority\" onChange={(e) => setPriority(e.target.value)}>\n                <option value=\"1\">High</option>\n                <option value=\"2\">Medium</option>\n                <option value=\"3\">Low</option>\n            </select>\n            <input type=\"button\" value=\"Cancel\"\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Add\"\n                   onClick={(e) => props.addNewDataPoint(title, priority)}/>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport {ChecklistItem} from \"./ChecklistItem\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {ModifyTaskPage} from \"./ModifyTaskPage\";\nimport {AddTaskPage} from \"./AddTaskPage\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\n\nexport function Checklist(props) {\n\n    const [taskValue, taskLoading, taskError] = useCollection(props.collection.doc(props.currentList).collection(\"tasks\").orderBy(props.sortValue, \"asc\"));\n    let data = [];\n    if (taskValue !== undefined) {\n        data = taskValue.docs.map(doc =>\n            doc.data());\n    }\n\n    const [incompleteTasksOnly, setIncompleteTasksOnly] = useState(false);\n    const taskButtonValue = (!incompleteTasksOnly ? \"Hide Completed Tasks\" : \"Show Completed Tasks\");\n    const [currentTaskNameId, setCurrentTaskNameId] = useState([]);\n\n    function addNewItem(value, priority) {\n        const id = generateUniqueID();\n        props.collection.doc(props.currentList).collection(\"tasks\").doc(id).set(\n            {\n                title: value,\n                id: id,\n                completed: false,\n                priority: priority,\n                created: firebase.database.ServerValue.TIMESTAMP,\n                list: props.currentList\n            }\n        );\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function handleChangeField(id, field, value) {\n        props.collection.doc(props.currentList).collection(\"tasks\").doc(id).update({\n            [field]: value,\n        });\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function handleDelete(id) {\n        props.collection.doc(props.currentList).collection(\"tasks\").doc(id).delete();\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function deleteCompletedItems() {\n        data.forEach(item => item.completed && handleDelete(item.id));\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function changeItemsToShow() {\n        setIncompleteTasksOnly(!incompleteTasksOnly);\n        props.changeCurrentPage(\"checklist\");\n    }\n\n    function modifyTask(taskName, id) {\n        props.changeCurrentPage(\"modifyTask\");\n        setCurrentTaskNameId([taskName, id]);\n    }\n\n    function onCheck(checked, id) {\n        handleChangeField(id, \"completed\", checked);\n    }\n\n    function getItemsToRender(completed) {\n        return data.map((item) => ((completed && item.completed) || (!completed && !item.completed) ?\n            <ChecklistItem key={item.id} id={item.id} title={item.title} completed={item.completed}\n                           checkFunction={(e) => onCheck(e.target.checked, item.id)} modifyTask={modifyTask}\n                           priority={item.priority}/>\n            : undefined));\n    }\n\n    return (\n        <div>\n            {props.currentPage === \"checklist\" && <div>\n                <form>\n                    <table>\n                        <thead>\n                        <tr>\n                            {!incompleteTasksOnly && <th>Complete</th>}\n                            <th>Incomplete</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            {!incompleteTasksOnly && <td>{getItemsToRender(true)}</td>}\n                            <td>{getItemsToRender(false)}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </form>\n\n                <div className=\"buttons\">\n                    <input type=\"button\" value=\"Add New Task\" onClick={() => props.changeCurrentPage(\"addTask\")}/>\n                    <input type=\"button\" value={taskButtonValue}\n                           onClick={changeItemsToShow}/>\n                    {(data.filter((task) => task.completed)).length > 0 &&\n                    <input type=\"button\" value={\"Delete Completed Tasks\"}\n                           onClick={deleteCompletedItems}/>\n                    }\n                </div>\n            </div>}\n            <div>\n                {\n                    props.currentPage === \"modifyTask\" && <ModifyTaskPage handleChangeField={handleChangeField}\n                                                                          taskName={currentTaskNameId[0]}\n                                                                          id={currentTaskNameId[1]}\n                                                                          cancel={() => props.changeCurrentPage(\"checklist\")}/>\n                }\n                {\n                    props.currentPage === \"addTask\" &&\n                    <AddTaskPage addNewDataPoint={addNewItem} cancel={() => props.changeCurrentPage(\"checklist\")}/>\n                }\n            </div>\n            <div>\n\n            </div>\n        </div>\n    )\n\n}","import React from \"react\";\n\nexport function ConfirmDeletePage(props) {\n\n    return (\n        <div>\n            <h1 id=\"deleteList\">Are you sure you want to delete {props.listName}?</h1>\n            <input type=\"button\" value=\"Cancel\" aria-label={\"Cancel delete \" + props.listName}\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Confirm\" aria-label={\"Delete \" + props.listName}\n                   onClick={() => props.deleteCurrentList(props.listId)}/>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport function AddNewListPage(props) {\n    const [title, setTitle] = React.useState(\"\");\n\n    return (\n        <div>\n            <h1>Add New List:</h1>\n            <input type=\"text\" id=\"newList\" name=\"newList\"\n                   onChange={(e) => setTitle(e.target.value)}/>\n            <input type=\"button\" value=\"Cancel\"\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Add\"\n                   onClick={(e) => props.addNewList(title)}/>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport function SettingsPage(props) {\n    const [email, setEmail] = React.useState(\"\");\n\n    return (\n        <div>\n            <button value=\"Delete Current List\" aria-label=\"Delete list\"\n                    onClick={() => props.changeCurrentPage(\"deleteList\")}>\n                Delete List\n            </button>\n            <h1 id=\"shareList\" htmlFor=\"shareListEmail\" className=\"miscTextLarger\">Enter an email to share this list with:</h1>\n            <input type=\"text\" id=\"shareListEmail\" name=\"shareListEmail\"\n                   onChange={(e) => setEmail(e.target.value)}/>\n            <input type=\"button\" value=\"Share\"\n                   onClick={(e) => props.shareList(email)}/>\n            {props.sharedWith.length > 0 && <>\n                <h1 className=\"miscTextLarger\">Users currently shared with:</h1>\n                {props.sharedWith.map(person => (\n                        <div className=\"miscText\">\n                            {person}\n                            <button className=\"removePersonButton\" value=\"Remove List Sharing\"\n                                    aria-label={\"Remove list sharing for \" + person}\n                                    onClick={() => props.removePerson(person, \"settings\")}>\n                                <i className=\"fa fa-trash\" aria-hidden=\"true\"/>\n                            </button>\n                        </div>\n                    )\n                )}\n            </>}\n            <input type=\"button\" value=\"Return To List\"\n                   onClick={() => props.cancel()}/>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport function ConfirmLeaveListPage(props) {\n\n    return (\n        <div>\n            <h1 className=\"miscTextLarger\" id=\"deleteList\">Are you sure you want to leave {props.listName}?</h1>\n               <h1 className=\"miscText\"> Other users will still be able to view this list.</h1>\n            <input type=\"button\" value=\"Cancel\" aria-label={\"Cancel leave \" + props.listName}\n                   onClick={() => props.cancel()}/>\n            <input type=\"button\" value=\"Confirm\" aria-label={\"Leave \" + props.listName}\n                   onClick={() => props.leaveCurrentList(props.user.email, \"checklist\")}/>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {ConfirmDeletePage} from \"./ConfirmDeletePage\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {AddNewListPage} from \"./AddNewListPage\";\nimport {SettingsPage} from \"./SettingsPage\";\nimport {ConfirmLeaveListPage} from \"./ConfirmLeaveListPage\";\n\nexport function ListSelector(props) {\n    const [listSharedValues, loadingShared, errorShared] = useCollection(props.collection.where('sharing', \"array-contains\", props.user.email));\n    const [listOwnedValues, loadingOwned, errorOwned] = useCollection(props.collection.where('owner', \"==\", props.user.uid));\n    let listsOwned = [];\n    let listsShared = [];\n    if (listOwnedValues !== undefined) {\n        listsOwned = listOwnedValues.docs.map(doc =>\n            doc.data());\n    }\n    if (listSharedValues !== undefined && props.user.emailVerified) {\n        listsShared = listSharedValues.docs.map(doc =>\n            doc.data());\n    }\n\n    function addNewList(title) {\n        const id = generateUniqueID();\n        props.collection.doc(id).set(\n            {\n                title: title,\n                id: id,\n                owner: props.user.uid,\n                sharing: []\n            }\n        ).then(() => {\n                // list doesn't exist yet, so wait for it to be created to change current list\n                props.changeCurrentList(id);\n                props.changeCurrentPage(\"checklist\");\n            }\n        );\n\n    }\n\n    function deleteCurrentList(id) {\n        props.changeCurrentList(null);\n        props.collection.doc(id).delete();\n        props.changeCurrentPage(\"checklist\");\n    }\n\n\n    function removePersonFromList(email, newPage) {\n        props.collection.doc(props.currentList).update({\n            sharing: getListField(\"sharing\").filter(item => item !== email),\n        });\n        props.changeCurrentPage(newPage);\n        if(newPage === \"checklist\") {\n            props.changeCurrentList(null);\n        }\n    }\n\n    function getListField(field) {\n        return (listsOwned.concat(listsShared)).filter(list => list.id === props.currentList)[0][field];\n    }\n\n    function shareList(email) {\n        props.collection.doc(props.currentList).update({\n            sharing: [...getListField(\"sharing\"), email],\n        });\n    }\n\n    return (\n        <div>\n            {!loadingShared && !loadingOwned && props.currentPage !== \"newList\" && props.currentList !== null &&\n            <>\n                <h1>{getListField(\"title\")}\n                {listsShared.filter(item => item.id === props.currentList).length > 0 && \" (shared)\"}</h1>\n            </>}\n            {props.currentPage === \"checklist\" && <div id=\"sort-by\">Select a list:\n                <select name=\"listSelector\" aria-label=\"dropdown to select list\" id=\"listSelectorDropdown\"\n                        onChange={(e) => props.changeCurrentList(e.target.value)}>\n                    {props.currentList === null && <option disabled selected value>Select a list...</option>}\n                    {listsOwned.map(item => <option value={item.id}\n                                               selected={item.id === props.currentList}>{item.title}</option>)}\n                    {listsShared.map(item => <option value={item.id}\n                                                    selected={item.id === props.currentList}>{item.title + \" (shared)\"}</option>)}\n                </select>\n                {props.currentList !== null && <span>\n                    <button id=\"addButton\" aria-label=\"Add new list\" onClick={() => props.changeCurrentPage(\"newList\")}>\n                    +\n                </button>\n                {getListField(\"owner\") === props.user.uid && <button id=\"settingsButton\" value=\"View and Change List Settings\" aria-label=\"View and Change List Settings\"\n                        onClick={() => props.changeCurrentPage(\"settings\")}>\n                    <i className=\"fa fa-cog\" aria-hidden=\"true\"/>\n                </button>}\n                {getListField(\"owner\") !== props.user.uid && <button id=\"deleteButton\" value=\"Delete Current List\" aria-label=\"Delete list\"\n                    onClick={() => props.changeCurrentPage(\"leaveList\")}>\n                    <i className=\"fa fa-trash\" aria-hidden=\"true\"/>\n                </button>}\n                </span>\n\n                }\n            </div>}\n            {props.currentPage === \"deleteList\" &&\n            <ConfirmDeletePage listName={getListField(\"title\")}\n                               listId={props.currentList}\n                               deleteCurrentList={deleteCurrentList}\n                               cancel={() => props.changeCurrentPage(\"checklist\")}/>}\n            {props.currentPage === \"leaveList\" &&\n            <ConfirmLeaveListPage listName={getListField(\"title\")}\n                               listId={props.currentList}\n                                  user={props.user}\n                               leaveCurrentList={removePersonFromList}\n                               cancel={() => props.changeCurrentPage(\"checklist\")}/>}\n            {props.currentPage === \"newList\" &&\n            <AddNewListPage addNewList={addNewList} cancel={() => props.changeCurrentPage(\"checklist\")}/>}\n            {props.currentPage === \"settings\" &&\n            <SettingsPage removePerson={removePersonFromList} getListField={getListField} sharedWith={getListField(\"sharing\")} shareList={shareList} changeCurrentPage={props.changeCurrentPage} cancel={() => props.changeCurrentPage(\"checklist\")}/>}\n        </div>\n    );\n}","import './App.css';\nimport {Checklist} from './Checklist.js'\nimport React, {useState} from \"react\";\nimport {ListSelector} from \"./ListSelector\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport firebase from \"firebase/compat\";\nimport {useCreateUserWithEmailAndPassword, useSignInWithEmailAndPassword} from 'react-firebase-hooks/auth';\n\n\nfunction App(props) {\n    const [user, loading, error] = useAuthState(props.auth);\n    const [signUp, setSignUp] = useState(false);\n\n    return <div className=\"App\">\n        {loading && <h1>Loading now</h1>}\n        {user && <div>\n            <SignedInApp initialData={props.initialData} collection={props.collection} auth={props.auth} user={user}/>\n        </div>}\n        {!user && <div>\n            {signUp ? <div>\n                    <SignUp auth={props.auth}/><br/><br/>\n                    <div className=\"miscText\">Returning user?</div>\n                    <button onClick={() => setSignUp(!signUp)}>Sign in</button>\n            </div> :\n                <div>\n                    <SignIn auth={props.auth}/><br/><br/>\n                    <div className=\"miscText\">New user?</div>\n                    <button onClick={() => setSignUp(!signUp)}>Sign up</button>\n                </div>}\n        </div>}\n    </div>\n}\n\nfunction SignUp(props) {\n    const [createUserWithEmailAndPassword, userCredential, loading, error] = useCreateUserWithEmailAndPassword(props.auth);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    console.log(error);\n\n    return <div>{!loading && <div>\n        <h1>Sign up</h1>\n        <label htmlFor=\"email\" className=\"miscText\">Email:</label>\n        <input type=\"text\" id=\"email\" name=\"email\" onInput={e => setEmail(e.target.value)}/>\n        <label htmlFor=\"password\" className=\"miscText\">Password:</label>\n        <input type=\"password\" id=\"password\" name=\"password\" onInput={e => setPassword(e.target.value)}/>\n        <button onClick={() => createUserWithEmailAndPassword(email, password)}>Sign Up</button>\n        {error && <div className=\"error miscText\">{error.message}</div>}\n    </div>\n    }\n    </div>\n}\n\nfunction SignIn(props) {\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\n    const [signInWithEmailAndPassword, userCredential, loading, error] = useSignInWithEmailAndPassword(props.auth);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    console.log(error);\n\n    return <div>\n        <h1>Sign in</h1>\n        <label htmlFor=\"signInEmail\" className=\"miscText\">Email:</label>\n        <input type=\"text\" id=\"signInEmail\" name=\"email\" onInput={e => setEmail(e.target.value)}/>\n        <label htmlFor=\"signInPassword\" className=\"miscText\">Password:</label>\n        <input type=\"password\" id=\"signInPassword\" name=\"password\"\n               onInput={e => setPassword(e.target.value)}/>\n        <button onClick={() => signInWithEmailAndPassword(email, password)}>Sign in</button>\n        <button onClick={() => props.auth.signInWithPopup(googleProvider)}>Sign in with Google</button>\n        {!loading && error && <div className=\"error miscText\">{error.message}</div>}\n    </div>\n}\n\n\nexport function SignedInApp(props) {\n\n    const [sortValue, setSortValue] = useState(\"title\");\n    const [currentList, setCurrentList] = useState(null);\n    const [currentPage, setCurrentPage] = useState(\"checklist\");\n    const [verifyingEmail, setVerifyingEmail] = useState(false);\n\n    function verifyEmail() {\n        console.log(\"trying verifying email\");\n        props.user.sendEmailVerification();\n        setVerifyingEmail(true);\n    }\n\n    function changeCurrentPage(newPage) {\n        setCurrentPage(newPage);\n    }\n\n    function changeCurrentList(id) {\n        setCurrentList(id);\n    }\n\n    return (\n        <div>\n            {/*<h1>*/}\n                <ListSelector currentList={currentList} changeCurrentList={changeCurrentList}\n                              collection={props.collection} changeCurrentPage={changeCurrentPage}\n                              currentPage={currentPage} user={props.user}\n                />\n                {currentPage === \"checklist\" && currentList !== null &&\n                <div className=\"selectDropdowns\">\n                    <div id=\"sort-by\">Sort by:\n                        <select name=\"sortBy\" id=\"sortByDropdown\" aria-label=\"dropdown to select value to sort by\"\n                                onChange={(e) => setSortValue(e.target.value)}\n                                defaultValue={sortValue}>\n                            <option value=\"title\" selected={sortValue === \"title\"}>Title</option>\n                            <option value=\"priority\" selected={sortValue === \"priority\"}>Priority</option>\n                            <option value=\"created\" selected={sortValue === \"created\"}>Date created</option>\n                        </select></div>\n                </div>\n                }\n            {/*</h1>*/}\n\n            {currentList !== null &&\n            <div>\n                <Checklist currentList={currentList}\n                           sortValue={sortValue}\n                           changeCurrentPage={changeCurrentPage}\n                           collection={props.collection}\n                           currentPage={currentPage}\n                />\n\n            </div>}\n            <div className=\"miscText\">Signed in as {props.user.email}.</div>\n            <button onClick={() => props.auth.signOut()}>Sign Out</button>\n            {currentList === null && currentPage === \"checklist\" && props.user && !props.user.emailVerified && <div>\n                <button onClick={verifyEmail}>Validate Email</button>\n                {verifyingEmail && \"Check your inbox for an email requesting validation.\"}\n            </div>}\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"./App\";\n\nexport function InMemoryApp(props) {\n    return <App initialData={props.initialData} collection={props.collection} auth={props.auth}/>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {InMemoryApp} from \"./InMemoryApp\";\nimport firebase from \"firebase/compat\";\n\nconst initialData = []\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDPKaTLMKCRxvZrUC0Mr-zhmIvgib-wo2w\",\n    authDomain: \"cs124lab-86e6f.firebaseapp.com\",\n    projectId: \"cs124lab-86e6f\",\n    storageBucket: \"cs124lab-86e6f.appspot.com\",\n    messagingSenderId: \"624846876574\",\n    appId: \"1:624846876574:web:d46076bc03bef3f06ff08f\",\n    measurementId: \"G-DNNRR8Y9S2\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst collectionName = \"List-AuthenticationRequired\";\nconst collection = db.collection(collectionName);\nconst auth = firebase.auth();\n\nReactDOM.render(\n  <React.StrictMode>\n      <InMemoryApp initialData={initialData} collection={collection} auth={auth}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}